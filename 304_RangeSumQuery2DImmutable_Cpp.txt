class NumMatrix {
public:
    vector<vector<int>> dp;
    
    NumMatrix(vector<vector<int>>& matrix) {
        int sum = 0;
        
        for(auto r : matrix){
            vector<int> row;
            sum = 0;
            for(auto c : r){
                sum += c;
                row.push_back(sum);
            }
            dp.push_back(row);
        }
        
        for(int c = 0; c < dp[0].size(); c++){
            for(int r = 1; r < dp.size(); r++){
                dp[r][c] += dp[r-1][c];
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int sum = 0;
        
        sum = dp[row2][col2];
        
        if(row1){
            sum -= dp[row1 - 1][col2];
        }
        if(col1){
            sum -= dp[row2][col1 - 1];
        }
        if(row1 && col1){
            sum += dp[row1 - 1][col1 - 1];
        }
        return sum;
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */