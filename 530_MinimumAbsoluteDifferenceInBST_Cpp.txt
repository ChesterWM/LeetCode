/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode *node, vector<int> &nodeVal){
        if(!node){
            return;
        }
        
        inorder(node->left, nodeVal);
        nodeVal.push_back(node->val);
        inorder(node->right, nodeVal);
    }
    
    int getMinimumDifference(TreeNode* root) {
        vector<int> nodeVal;
        int minimum = INT_MAX;
        
        inorder(root, nodeVal);
        
        for(int i = 0; i < nodeVal.size()-1; i++){
            minimum = min(nodeVal[i+1] - nodeVal[i], minimum);
        }
        
        return minimum;
    }
};