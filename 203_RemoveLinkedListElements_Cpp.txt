/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode *current = nullptr;
        ListNode *previous = nullptr;
        
        current = head;
        while(current){
            if(current->val == val){
                //Check if the current is head
                if(current == head){
                    head = current->next;
                    current = head;
                    continue;
                } else {
                    previous->next = current->next;
                }
            } else {
                previous = current;
            }
            current = current->next;
        }
        
        return head;
    }
};