/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        vector<int> nodeVal;
        ListNode *current = nullptr;
        int count = 0;
        
        current = head;
        while(current){
            nodeVal.push_back(current->val);
            current = current->next;
        }
        
        swap(nodeVal[k-1], nodeVal[nodeVal.size()-k]);
        
        current = head;
        while(current){
            current->val = nodeVal[count++];
            current = current->next;
        }
        
        return head;
    }
};