/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> result;
        stack<TreeNode *> s;
        TreeNode *current = nullptr;
        
        current = root;
        while(current || !s.empty()){
            if(current){
                s.push(current);
                current = current->left;
            } else {
                TreeNode *node = s.top();
                
                result.push_back(node->val);
                current = node->right;
                
                //pop the last node in stack
                s.pop();
            }
        }
        
        return result;
    }
};