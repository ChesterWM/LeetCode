/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solver(TreeNode *node, vector<int> &leaf, bool is_left){
        if(!node){
            return;
        }
        if(!node->left && !node->right){
            if(is_left){
                leaf.push_back(node->val);
            }
            return;
        }
        
        solver(node->left, leaf, true);
        solver(node->right, leaf, false);
    }
    
    int sumOfLeftLeaves(TreeNode* root) {
        vector<int> leaf;
        int sum = 0;
        
        solver(root, leaf, false);
        for(auto n : leaf){
            sum += n;
        }
        
        return sum;
    }
};