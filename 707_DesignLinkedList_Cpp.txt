class MyLinkedList {
private:
    struct Node {
        int val;
        Node *next;
        
        Node(){
            val = 0;
            next = nullptr;
        }
        
        Node(int x){
            val = x;
        }
        
        Node(int x, Node *nextNode){
            val = x;
            next = nextNode;
        }
    };
    
    Node *head;
    Node *tail;
    int size;
    
    Node* findNodeWithIndex(int index){     
        if(index < 0 || index >= size){
            return nullptr;
        }
        
        Node *itr = head;
        for(; index != 0 && itr; index--){
            itr = itr->next;
        }
        
        return itr;
    }
    
public:
    MyLinkedList() {
        size = 0;
    }
    
    int get(int index) {
        Node *node = findNodeWithIndex(index);
        return node? node->val : -1;
    }
    
    void addAtHead(int val) {
        Node *newNode = new Node(val);
        
        if(size == 0){
            head = tail = newNode;
        } else {
            newNode->next = head;
            head = newNode;
        }
        size++;
    }
    
    void addAtTail(int val) {
        Node *newNode = new Node(val);
        if(size == 0){
            head = tail = newNode;
        } else {
            tail->next = newNode;
            tail = newNode;
        }
        size++;
    }
    
    void addAtIndex(int index, int val) {
        if(index < 0 || index > size){
            return;
        } else if(index == 0){
            addAtHead(val);
        } else if(index == size){
            addAtTail(val);
        } else {
            Node *node = findNodeWithIndex(index - 1);
            Node *newNode = new Node(val, node->next);
            node->next = newNode;
            size++;
        }
    }
    
    void deleteAtIndex(int index) {
        if(index < 0 || index >= size){
            return;
        }
        
        if(size == 1){
            delete head;
            head = tail = nullptr;
        } else if(index == 0){
            //delete head
            Node *removeNode = head;
            head = head->next;
            delete removeNode;
        } else if(index == size-1){
            //delete tail
            Node *node = findNodeWithIndex(index-1);
            
            Node *removeNode = node->next;
            tail = node;
            delete removeNode;
        } else {
            Node *node = findNodeWithIndex(index-1);
            
            Node *removeNode = node->next;
            node->next = removeNode->next;
            delete removeNode;
        }
        size--;
    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */