/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    void solver(Node *node, vector<int> &result, stack<int> &val){
        int nodeVal;
        
        if(!node){
            return;
        }
        
        //push the current node value to stack
        val.push(node->val);
        
        //Handle the children node
        for(int i = 0; i < node->children.size(); i++){
            solver(node->children[i], result, val);
        }
        
        //After process the children, handle the current node value
        result.push_back(val.top());
        val.pop();
    }
    
    vector<int> postorder(Node* root) {
        vector<int> result;
        stack<int> val;
        
        solver(root, result, val);
        return result;
    }
};