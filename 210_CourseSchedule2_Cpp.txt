class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> adj[numCourses];
        vector<int> allCourses(numCourses, 0);
        queue<int> q;
        vector<int> ans;
        int visited = 0;
        
        for(int i = 0; i < prerequisites.size(); i++){
            int u = prerequisites[i][0];
            int v = prerequisites[i][1];
            
            adj[v].push_back(u);
        }
        
        for(int i = 0; i < numCourses; i++){
            for(auto course : adj[i]){
                allCourses[course]++;
            }
        }
        
        for(int i = 0; i < numCourses; i++){
            if(allCourses[i] == 0){
                q.push(i);
            }
        }
        
        while(!q.empty()){
            int value = q.front();
            q.pop();
            
            visited++;
            ans.push_back(value);
            //check if the current course is the prerequisite of other courses
            for(auto course : adj[value]){
                allCourses[course]--;
                if(allCourses[course] == 0){
                    q.push(course);
                }
            }
        }
        
        if(visited != numCourses){
            ans.clear();
        }
        return ans;
    }
};