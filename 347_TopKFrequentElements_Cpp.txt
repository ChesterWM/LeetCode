class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> result;
        map<int, int> nums_map;
        priority_queue<pair<int, int>> pq;
        
        //Prepare the map
        for(auto n : nums){
            nums_map[n]++;
        }
        
        //Prepare the priority queue
        for(auto m : nums_map){
            pq.push({m.second, m.first});   //must include the {}
        }
        
        //prepare the vector
        while(k){
            result.push_back(pq.top().second);
            pq.pop();
            k--;
        }
        
        return result;
    }
};