class Solution {
public:
    int dp[101][101];
    
    bool solver(string &s1, string &s2, string &s3, int i, int j, int k){
        bool s1_result = false, s2_result = false;
        
        if(k >= s3.size()){
            //End of comparison
            return true;
        }
        
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        
        if(s1[i] == s3[k]){
            s1_result = solver(s1, s2, s3, i+1, j, k+1);
        }
        if(s2[j] == s3[k]){
            s2_result = solver(s1, s2, s3, i, j+1, k+1);
        }
        
        dp[i][j] = s1_result || s2_result;
        return dp[i][j];
    }
    
    bool isInterleave(string s1, string s2, string s3) {
        //Init the dp value
        memset(dp, -1, sizeof(dp));
        
        //Check the length of s1, s2 and s3
        if(s1.size() + s2.size() != s3.size()){
            return false;
        }
        
        return solver(s1, s2, s3, 0, 0, 0);
    }
};