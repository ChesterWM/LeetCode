class Solution {
public:
    int searchRow(vector<vector<int>> &matrix, int target){
        int i = 0;
        
        for(i = 0; i < matrix.size()-1; i++){
            if(matrix[i][0] == target || (matrix[i][0] < target && matrix[i+1][0] > target)){
                return i;
            }
        }
        
        return i;
    }
    
    int binarySearch(int left, int right, int targetRow, vector<vector<int>> &matrix, int target){
        int mid = 0;
        
        while(left <= right){
            mid = (left + right) / 2;
            //search row
            if(matrix[targetRow][mid] == target){
                return mid;
            } else if(matrix[targetRow][mid] > target){
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return -1;
        
    }
    
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int targetRow = 0, result = 0;;
        
        targetRow = searchRow(matrix, target);
        result = binarySearch(0, matrix[targetRow].size()-1, targetRow, matrix, target);
        
        if(result == -1){
            return false;
        } else {
            return true;
        }
        
    }
};