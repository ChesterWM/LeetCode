/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode *preNode;
    
    void reversePreOrderTraversal(TreeNode *node){
        if(!node){
            return;
        }
        
        //Reverse order of PreOrder Traversal (right->left->current node)
        reversePreOrderTraversal(node->right);
        reversePreOrderTraversal(node->left);
        
        node->right = preNode;
        preNode = node;
        node->left = nullptr;
    }
    
    void flatten(TreeNode* root) {
        preNode = nullptr;
        reversePreOrderTraversal(root);
    }
};