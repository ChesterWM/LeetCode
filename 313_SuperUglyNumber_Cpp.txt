class Solution {
public:
    int nthSuperUglyNumber(int n, vector<int>& primes) {
        vector<int> ugly(n, 0);
        vector<int> position(primes.size(), 0);
        
        /*
        *   Ugly number is formed by ugly number * primes
        *   So use position to memorize the position of ugly number for future comparison!
        */
        
        ugly[0] = 1;
        
        for(int i = 1; i < n; i++){
            long long minimumNumber = INT_MAX;
            
            for(int j = 0; j < primes.size(); j++){
                minimumNumber = min(minimumNumber, (long long)primes[j] * (long long)ugly[position[j]]); 
            }
            
            //Set the current ugly[i] as above minimum number
            //And update the position array!
            ugly[i] = minimumNumber;
            for(int j = 0; j < primes.size(); j++){
                if(minimumNumber == (long long)primes[j] * (long long)ugly[position[j]]){
                    position[j]++;
                }
            }
        }
        
        return ugly[n-1];
    }
};