/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solver(TreeNode *node, int targetSum, vector<int> &path, vector<vector<int>> &result){
        //using preorder traversal to swipe all the treenode
        
        if(!node){
            return;
        }
        
        //Visit the root
        targetSum -= node->val;
        path.push_back(node->val);
        if(targetSum == 0 && !node->left && !node->right){
            result.push_back(path);
            path.pop_back();
            return;
        }
        
        //Visit the left node
        solver(node->left, targetSum, path, result);
        
        //Visit the right node
        solver(node->right, targetSum, path, result);
        
        path.pop_back();
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> path;
        vector<vector<int>> result;
        
        solver(root, targetSum, path, result);
        return result;
    }
};