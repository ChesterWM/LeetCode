/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode *> solver(int low, int high){
        vector<TreeNode *> nodes;
        
        if(low > high){
            nodes.push_back(nullptr);
            return nodes;
        }
        
        
        for(int i = low; i <= high; i++){
            for(auto &left : solver(low, i-1)){
                for(auto &right : solver(i+1, high)){
                    nodes.push_back(new TreeNode(i, left, right));
                }
            }
        }
        return nodes;
    }
    
    vector<TreeNode*> generateTrees(int n) {
        return solver(1, n);
    }
};