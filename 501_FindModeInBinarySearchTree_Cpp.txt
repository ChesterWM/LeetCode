/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solver(TreeNode *node, map<int, int> &m, int &count){
        if(!node){
            return;
        }
        
        m[node->val]++;
        if(m[node->val] > count){
            count = m[node->val];
        }
        
        solver(node->left, m, count);
        solver(node->right, m, count);
    }
    
    vector<int> findMode(TreeNode* root) {
        int count = 0;
        map<int, int> m;
        vector<int> ans;
        
        solver(root, m, count);
        
        for(auto e : m){
            if(e.second == count){
                ans.push_back(e.first);
            }
        }
        
        return ans;
    }
};