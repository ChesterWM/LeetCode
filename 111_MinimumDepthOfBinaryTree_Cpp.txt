/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int depth(TreeNode *node){
        if(!node){
            return 0;
        }
        
        int leftdepth = depth(node->left);
        int rightdepth = depth(node->right);
        
        if(!leftdepth || !rightdepth){
            //Consider both left/right
            return (1 + max(leftdepth, rightdepth));
        }
        
        return (1 + min(leftdepth, rightdepth));
    }
    
    int minDepth(TreeNode* root) {
        return depth(root);
    }
};