/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode *> q;
        vector<vector<int>> zigzagLevelOrder;
        int isReverse = 0;
        
        if(!root){
            return zigzagLevelOrder;
        }
        
        q.push(root);
        
        while(!q.empty()){
            vector<int> order;
            int len = q.size();
            
            for(int i = 0; i < len; i++){
                order.push_back(q.front()->val);
                //From left to right
                if(q.front()->left){
                    q.push(q.front()->left);
                }
                if(q.front()->right){
                    q.push(q.front()->right);
                }
                q.pop();
            }
            if(isReverse){
                isReverse = 0;
                reverse(order.begin(), order.end());
            } else {
                isReverse = 1;
            }
            zigzagLevelOrder.push_back(order);
        }
        
        return zigzagLevelOrder;
    }
};