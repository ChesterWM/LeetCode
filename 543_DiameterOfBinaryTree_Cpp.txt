/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solver(int &longestLength, TreeNode *node){
        int left = 0, right = 0;
        
        if(!node){
            return 0;
        }
        
        left = solver(longestLength, node->left);
        right = solver(longestLength, node->right);
        
        longestLength = max(longestLength, left + right);
        return max(left, right) + 1;
    }
    
    int diameterOfBinaryTree(TreeNode* root) {
        int diameter = 0;
        
        solver(diameter, root);
        return diameter;
        
        
    }
};